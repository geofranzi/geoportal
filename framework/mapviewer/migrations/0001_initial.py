# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-07-12 11:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('csw', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('BingMaps', 'BingMaps'), ('WMS', 'WMS'), ('WMTS', 'WMTS'), ('XYZ', 'XYZ'), ('MapQuest', 'MapQuest'), ('OSM', 'OSM')], max_length=10)),
                ('url', models.CharField(blank=True, max_length=200, null=True, verbose_name='URL')),
                ('layername', models.CharField(blank=True, max_length=200, null=True)),
                ('imageformat', models.CharField(blank=True, max_length=100, null=True)),
                ('wmts_matrixset', models.CharField(blank=True, max_length=100, null=True, verbose_name='WMTS matrix set')),
                ('wmts_resolutions', models.TextField(blank=True, help_text='separated by space/blank character', null=True, verbose_name='WMTS resolutions')),
                ('wmts_projection', models.IntegerField(blank=True, help_text='EPSG code (only number)', null=True, verbose_name='WMTS projection')),
                ('wmts_tilesize', models.IntegerField(blank=True, help_text='e.g., 256, 512', null=True, verbose_name='WMTS tilesize')),
            ],
        ),
        migrations.CreateModel(
            name='BaseLayerInline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('baselayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapviewer.BaseLayer')),
            ],
        ),
        migrations.CreateModel(
            name='MapViewer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('template_file', models.FilePathField(match='.*\\.html', path='D:/PycharmProjects/geoportal/framework\\templates/mapviewer', verbose_name='Template file')),
                ('auth_registration', models.BooleanField(default=False, verbose_name='Allow user registration')),
                ('addexternallayer', models.BooleanField(default=False, help_text='(Hint: If activated, the button for add external layers to map by users is not hidden.)', verbose_name='Allow external layers')),
                ('center_lat', models.FloatField(default=90.0, help_text='Center coordinate (latitude)', verbose_name='Center latitude')),
                ('center_lon', models.FloatField(default=25.0, help_text='Center coordinate (longitude)', verbose_name='Center longitude')),
                ('center_proj', models.CharField(default='EPSG:4326', help_text='EPSG projection code of center coordinate', max_length=15, verbose_name='Center projection')),
                ('map_proj', models.CharField(default='EPSG:4326', help_text='EPSG projection code (e.g. EPSG:3857 - WGS84 Web Mercator, used in many popular web mapping applications (GoogleMaps/OpenStreetMap/etc))', max_length=15, verbose_name='Map projection')),
                ('map_resolutions', models.TextField(blank=True, help_text='Map resolutions (seperated by space/blank character)', null=True, verbose_name='Map zoom resolutions')),
                ('zoom_min', models.IntegerField(default=0, help_text='Default: 0', verbose_name='Minimum zoom for map')),
                ('zoom_max', models.IntegerField(default=28, help_text='(Hint: Please check the max supported zoom level of your used base layer.)', verbose_name='Maximum zoom for map')),
                ('zoom_init', models.IntegerField(default=4, help_text='Default: 4', verbose_name='Initial zoom for map')),
                ('auth_perm', models.BooleanField(default=True, help_text='Restrict viewer access', verbose_name='Access permission')),
                ('download_perm', models.BooleanField(default=True, verbose_name='Download permission')),
                ('time_slider', models.BooleanField(default=False, help_text='Activate time slider', verbose_name='Time slider')),
                ('time_slider_start', models.DateTimeField(blank=True, null=True, verbose_name='Starting date')),
                ('time_slider_end', models.DateTimeField(blank=True, null=True, verbose_name='Ending date')),
                ('time_slider_interval', models.CharField(blank=True, choices=[('year', 'year'), ('month', 'month'), ('week', 'week'), ('day', 'day')], max_length=100, null=True, verbose_name='Step interval')),
                ('time_slider_dates', models.TextField(blank=True, help_text='Dates separated by comma', null=True, verbose_name='Individual dates')),
                ('html_info', models.TextField(blank=True, help_text='Please note: Line breaks will be converted to &lt;br&gt; tags', null=True, verbose_name='Info text (HTML)')),
                ('html_footer', models.TextField(blank=True, null=True, verbose_name='Footer text (HTML)')),
                ('auth_groups', models.ManyToManyField(blank=True, to='auth.Group', verbose_name='Access groups')),
                ('auth_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Access users')),
                ('download_groups', models.ManyToManyField(blank=True, related_name='download_groups', to='auth.Group')),
                ('download_users', models.ManyToManyField(blank=True, related_name='download_users', to=settings.AUTH_USER_MODEL)),
                ('search_url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='csw.CSW', verbose_name='Server for search field')),
            ],
        ),
    ]
